let totalDepositado = 0;

// Função para carregar dados salvos no localStorage
function carregarDados() {
    try {
        const dados = JSON.parse(localStorage.getItem('depositos'));
        if (dados && typeof dados.total === 'number' && Array.isArray(dados.numerosSelecionados)) {
            totalDepositado = dados.total;
            atualizarTotal();

            // Marca os depósitos já clicados
            dados.numerosSelecionados.forEach(num => {
                const deposit = document.getElementById(`deposito-${num}`);
                if (deposit) {
                    deposit.classList.add('clicked');
                }
            });
        }
    } catch (e) {
        console.error('Erro ao carregar dados do localStorage:', e);
    }
}

// Função para salvar os dados no localStorage
function salvarDados() {
    const numerosSelecionados = [];
    document.querySelectorAll('.deposit.clicked').forEach(deposit => {
        const numero = parseInt(deposit.textContent, 10);
        numerosSelecionados.push(numero);
    });

    const dados = {
        total: totalDepositado,
        numerosSelecionados: numerosSelecionados
    };

    localStorage.setItem('depositos', JSON.stringify(dados));
}

// Função para criar os depósitos na tela
function criarDepositos() {
    const container = document.querySelector('.deposits-container');
    
    for (let i = 1; i <= 100; i++) {
        const deposit = document.createElement('div');
        deposit.classList.add('deposit');
        deposit.textContent = i;
        deposit.id = `deposito-${i}`;
        
        deposit.addEventListener('click', () => {
            if (deposit.classList.contains('clicked')) {
                deposit.classList.remove('clicked');
                totalDepositado -= i;
            } else {
                deposit.classList.add('clicked');
                totalDepositado += i;
            }
            atualizarTotal();
            salvarDados();
        });
        
        container.appendChild(deposit);
    }
}

// Função para atualizar o valor total
function atualizarTotal() {
    const totalElement = document.getElementById('total');
    totalElement.textContent = totalDepositado.toFixed(2);

    // Adiciona uma classe de feedback visual ao total
    totalElement.classList.add(totalDepositado >= 0 ? 'updated' : 'updated-negative');
    setTimeout(() => {
        totalElement.classList.remove('updated', 'updated-negative');
    }, 300);
}

// Botão de reset
document.getElementById('reset-btn').addEventListener('click', () => {
    localStorage.removeItem('depositos');
    totalDepositado = 0;
    atualizarTotal();

    // Remove a classe 'clicked' de todos os depósitos
    document.querySelectorAll('.deposit').forEach(deposit => {
        deposit.classList.remove('clicked');
    });
});

// Inicialização
criarDepositos();
carregarDados();
